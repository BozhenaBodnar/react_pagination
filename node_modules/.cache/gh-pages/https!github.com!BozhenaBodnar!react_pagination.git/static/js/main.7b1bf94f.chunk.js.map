{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","total","itemsInPage","currentPage","onPageChange","pagesCount","Math","ceil","className","classNames","disabled","href","onClick","map","page","active","length","items","App","useState","setItemsInPage","setCurrentPage","startItem","endItem","visibleNumbers","id","value","onChange","event","target","htmlFor","num","ReactDOM","render","document","getElementById"],"mappings":"yLAAO,SAASA,EAAWC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,E,2BCIIG,EAAwB,SAAC,GAK/B,IAJLC,EAII,EAJJA,MACAC,EAGI,EAHJA,YACAC,EAEI,EAFJA,YACAC,EACI,EADJA,aAEMC,EAAaX,EAAW,EAAGY,KAAKC,KAAKN,EAAQC,IAEnD,OACE,qBAAIM,UAAU,aAAd,UACE,oBACEA,UAAWC,IACT,YACA,CAAEC,SAA0B,IAAhBP,IAHhB,SAME,mBACE,UAAQ,WACRK,UAAU,YACVG,KAAK,QACL,gBAA+B,IAAhBR,EACfS,QAAS,WACPR,EAAaD,EAAc,IAN/B,oBAaDE,EAAWQ,KAAI,SAAAC,GAAI,OAClB,oBACEN,UAAWC,IACT,YACA,CAAEM,OAAQZ,IAAgBW,IAH9B,SAOE,mBACE,UAAQ,WACRN,UAAU,YACVG,KAAI,WAAMG,GACVF,QAAS,kBAAMR,EAAaU,IAJ9B,SAMGA,KAREA,MAaT,oBACEN,UAAWC,IACT,YACA,CAAEC,SAAUL,EAAWW,SAAWb,IAHtC,SAME,mBACE,UAAQ,WACRK,UAAU,YACVG,KAAK,QACL,gBAAeN,EAAWW,SAAWb,EACrCS,QAAS,WACPR,EAAaD,EAAc,IAN/B,wBC5DFc,EAAQvB,EAAW,EAAG,IACzBmB,KAAI,SAAAf,GAAC,qBAAYA,MAEPoB,EAAgB,WAC3B,MAAsCC,mBAAS,GAA/C,mBAAOjB,EAAP,KAAoBkB,EAApB,KACA,EAAsCD,mBAAS,GAA/C,mBAAOhB,EAAP,KAAoBkB,EAApB,KAEMC,GAAanB,EAAc,GAAKD,EAAc,EAC9CqB,EAAUpB,EAAcD,EAAce,EAAMD,OAC9CC,EAAMD,OACNb,EAAcD,EAMZsB,EAAiB9B,EAAW4B,EAAWC,GAE7C,OACE,sBAAKf,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWL,EADX,mBACiCmB,EADjC,cACgDC,EADhD,eAC8DN,EAAMD,OADpE,OAIA,sBAAKR,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACRiB,GAAG,kBACHjB,UAAU,eACVkB,MAAOxB,EACPyB,SAAU,SAACC,GACTR,GAAgBQ,EAAMC,OAAOH,OAC7BL,EAAe,IAPnB,UAUE,wBAAQK,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAIJ,uBAAOI,QAAQ,kBAAkBtB,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACEP,MAAOgB,EAAMD,OACbd,YAAaA,EACbC,YAAaA,EACbC,aA1Ca,SAACU,GAClBO,EAAeP,MA4Cb,6BACGU,EAAeX,KAAI,SAAAkB,GAAG,OACrB,oBAAI,UAAQ,OAAZ,wBACWA,cC9DrBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.7b1bf94f.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import { FC } from 'react';\nimport classNames from 'classnames';\nimport { getNumbers } from '../../utils';\n\nexport interface Props {\n  total: number,\n  itemsInPage: number,\n  currentPage: number,\n  onPageChange: (page: number) => void,\n}\n\nexport const Pagination: FC<Props> = ({\n  total,\n  itemsInPage,\n  currentPage,\n  onPageChange,\n}) => {\n  const pagesCount = getNumbers(1, Math.ceil(total / itemsInPage));\n\n  return (\n    <ul className=\"pagination\">\n      <li\n        className={classNames(\n          'page-item',\n          { disabled: currentPage === 1 },\n        )}\n      >\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={currentPage === 1}\n          onClick={() => {\n            onPageChange(currentPage - 1);\n          }}\n        >\n          «\n        </a>\n      </li>\n\n      {pagesCount.map(page => (\n        <li\n          className={classNames(\n            'page-item',\n            { active: currentPage === page },\n          )}\n          key={page}\n        >\n          <a\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            href={`#${page}`}\n            onClick={() => onPageChange(page)}\n          >\n            {page}\n          </a>\n        </li>\n      ))}\n\n      <li\n        className={classNames(\n          'page-item',\n          { disabled: pagesCount.length === currentPage },\n        )}\n      >\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={pagesCount.length === currentPage}\n          onClick={() => {\n            onPageChange(currentPage + 1);\n          }}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination/Pagination';\n\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [itemsInPage, setItemsInPage] = useState(5);\n  const [currentPage, setCurrentPage] = useState(1);\n\n  const startItem = (currentPage - 1) * itemsInPage + 1;\n  const endItem = currentPage * itemsInPage > items.length\n    ? items.length\n    : currentPage * itemsInPage;\n\n  const changePage = (page: number) => {\n    setCurrentPage(page);\n  };\n\n  const visibleNumbers = getNumbers(startItem, endItem);\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${startItem} - ${endItem} of ${items.length})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={itemsInPage}\n            onChange={(event) => {\n              setItemsInPage(+event.target.value);\n              setCurrentPage(1);\n            }}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={items.length}\n        itemsInPage={itemsInPage}\n        currentPage={currentPage}\n        onPageChange={changePage}\n      />\n\n      <ul>\n        {visibleNumbers.map(num => (\n          <li data-cy=\"item\">\n            {`Item ${num}`}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}